import java.util.Scanner;

public class Runner {
	
	static Scanner s = new Scanner(System.in);
	
	public static int[] takeInput(){
		int size = s.nextInt();
		int[] input = new int[size];
		for(int i = 0; i < size; i++){
			input[i] = s.nextInt();
		}
		return input;
	}
	
	public static void main(String[] args) {
		int[] input = takeInput();
		Solution.quickSort(input);
		for(int i = 0; i < input.length; i++) {
			System.out.print(input[i] + " ");
		}
	}
}



public class Solution {
	
	public static void quickSort(int[] input) {
		quickSort(input, 0, input.length-1);	
	}
	
    private static void quickSort(int input[], int l, int r){
    	
        if(l < r){
        int p = partition(input, l, r); 
        quickSort(input, l, p-1);
        quickSort(input, p+1, r);
        }
    }
    
    private static int partition(int arr[], int l, int r){
        int pivot = arr[r];
        
        int i = l-1;
        
        for(int j=l; j<r; j++){
            if(arr[j] < pivot){
                i++;
                swap(arr, i, j);
            }
        }
        swap(arr, i+1, r);     // here i is the last element which is samller than pivot;
        return i+1;
    }
    
    private static void swap(int arr[], int i, int j){
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
    
}

